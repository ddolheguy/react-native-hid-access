buildscript {
  // Buildscript is evaluated before everything else so we can't use getExtOrDefault
  def kotlin_version = rootProject.ext.has("kotlinVersion") ? rootProject.ext.get("kotlinVersion") : project.properties["HidAccess_kotlinVersion"]

  repositories {
    google()
    mavenCentral()
  }

  dependencies {
    classpath "com.android.tools.build:gradle:7.2.1"
    // noinspection DifferentKotlinGradleVersion
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
  }
}

def reactNativeArchitectures() {
  def value = rootProject.getProperties().get("reactNativeArchitectures")
  return value ? value.split(",") : ["armeabi-v7a", "x86", "x86_64", "arm64-v8a"]
}

def isNewArchitectureEnabled() {
  return rootProject.hasProperty("newArchEnabled") && rootProject.getProperty("newArchEnabled") == "true"
}

apply plugin: "com.android.library"
apply plugin: "kotlin-android"

if (isNewArchitectureEnabled()) {
  apply plugin: "com.facebook.react"
}

def getExtOrDefault(name) {
  return rootProject.ext.has(name) ? rootProject.ext.get(name) : project.properties["HidAccess_" + name]
}

def getExtOrIntegerDefault(name) {
  return rootProject.ext.has(name) ? rootProject.ext.get(name) : (project.properties["HidAccess_" + name]).toInteger()
}

def supportsNamespace() {
  def parsed = com.android.Version.ANDROID_GRADLE_PLUGIN_VERSION.tokenize('.')
  def major = parsed[0].toInteger()
  def minor = parsed[1].toInteger()

  // Namespace support was added in 7.3.0
  return (major == 7 && minor >= 3) || major >= 8
}

android {
  if (supportsNamespace()) {
    namespace "com.hidaccess"

    sourceSets {
      main {
        manifest.srcFile "src/main/AndroidManifestNew.xml"
      }
    }
  }

  compileSdkVersion getExtOrIntegerDefault("compileSdkVersion")

  defaultConfig {
    minSdkVersion getExtOrIntegerDefault("minSdkVersion")
    targetSdkVersion getExtOrIntegerDefault("targetSdkVersion")

  }

  buildTypes {
    release {
      minifyEnabled false
    }
  }

  lintOptions {
    disable "GradleCompatible"
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }
}

repositories {
  mavenCentral()
  google()
}

def kotlin_version = getExtOrDefault("kotlinVersion")

dependencies {
  // For < 0.71, this will be from the local maven repo
  // For > 0.71, this will be replaced by `com.facebook.react:react-android:$version` by react gradle plugin
  //noinspection GradleDynamicVersion
  implementation "com.facebook.react:react-native:+"
  implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

  debugImplementation 'swiftconnect.io:swiftconnect-sdk-legacy:1.3.5-SNAPSHOT'
  debugImplementation 'com.hid.origo:mobilekeys-android-sdk-debug:8.0.5-NA@aar'
  debugImplementation 'com.hid.origo:origo-sdk-debug:1.9.0-NA@aar'

  releaseImplementation 'swiftconnect.io:swiftconnect-sdk-legacy:1.3.5'
  releaseImplementation 'com.hid.origo:mobilekeys-android-sdk-release:8.0.5-NA@aar'
  releaseImplementation 'com.hid.origo:origo-sdk-release:1.9.0-NA@aar'

  // Square stuff  OkIO, OkHttp, Retrofit
  implementation "com.squareup.okhttp3:okhttp:4.9.3"
  implementation "com.squareup.okhttp3:logging-interceptor:4.9.3"
  implementation "com.squareup.retrofit2:retrofit:2.9.0"
  implementation "com.squareup.retrofit2:converter-gson:2.9.0"

  testImplementation 'junit:junit:4.13.2'

  // JWT Token
  implementation 'com.auth0.android:jwtdecode:2.0.1'

  // Timber
  implementation "com.jakewharton.timber:timber:5.0.1"

  // Picasso
  implementation "com.squareup.picasso:picasso:2.71828"
  implementation "com.jakewharton.picasso:picasso2-okhttp3-downloader:1.1.0"

  implementation 'androidx.preference:preference-ktx:1.2.0'

  implementation 'org.slf4j:slf4j-api:1.7.30'
  // implementation 'com.jakewharton.timber:timber:5.0.1'

  // Security
  implementation "androidx.security:security-crypto:1.1.0-alpha03"
  implementation "androidx.security:security-identity-credential:1.0.0-alpha03"
}

